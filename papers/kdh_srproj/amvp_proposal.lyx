#LyX 1.6.8 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Lunar Multi-photogrammetry and Its Visualization
\end_layout

\begin_layout Author
Kyle D.
 Husmann
\begin_inset Newline newline
\end_inset


\shape italic
\size normal
khusmann@calpoly.edu
\shape default
\size default

\begin_inset Newline newline
\end_inset


\shape italic
\size normal
California Polytechnic State University, San Luis Obispo, CA, USA
\end_layout

\begin_layout Date
February 19, 2011
\end_layout

\begin_layout Abstract
The abstract goes here...
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Topographical maps are an essential tool for scientists interested in exploring
 and learning more about planetary bodies like the moon or mars.
 These maps allow scientists do everything from identifying geological phenomena
 to identifying potential landing sites for probes or spacecraft.
\end_layout

\begin_layout Standard
Satellites and other spacecraft that visit planetary bodies of interest
 are usually equipped with a variety of sensors, some of which can be used
 to recover the topography of the planetary surface.
 LiDAR (Light Detection And Ranging) sensors give sparse (but highly accurate)
 measurements at periodic points called 
\begin_inset Quotes eld
\end_inset

posts
\begin_inset Quotes erd
\end_inset

.
 Raw images that are captured as the satellite orbits the planetary body
 can also be processed to create highly detailed topographical maps.
 By registering and aligning these two data sets, maps can be created that
 are both dense accurate.
 The methods of processing orbital images into topographical maps are the
 topic of this paper.
\end_layout

\begin_layout Standard
Given two images of the same scene taken from slightly different perspectives,
 the relative shift of objects from frame to frame (known as 
\begin_inset Quotes eld
\end_inset

disparity
\begin_inset Quotes erd
\end_inset

) is related to distance of the object: far objects appear to move less
 than close objects.
 This phenomena should be familiar, since the human brain uses this relationship
 to create depth perception from the differences in perspective seen by
 both eyes.
 Similarly, depth information from orbital imagery can be recovered in areas
 where the images overlap by matching points in the images that correspond
 to the same 3D location and measuring their disparity.
 By using the disparity along with the location and orientation of the spacecraf
t as well as a mathematical model for the lens of the camera, the precise
 location of the 3D point can be calculated.
 This technique of using matching points between images to calculate 3D
 locations is known as 
\begin_inset Quotes eld
\end_inset

stereophotogrammetry
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Before computers automated this task, points in orbital images were manually
 matched using mechanical stereoplotters like the one shown in figure [FIG].
 Now, computers can perform this once long and arduous process with minimal
 human interaction.
 Software suites like the Ames Stereo Pipeline (ASP) can be fed orbital
 images and will simply output the topography in the form of digital elevation
 maps (DEMs).
\end_layout

\begin_layout Standard
While stereophotogrammetry produces good results, we are interested in going
 beyond the usual two views used in the stereo reconstruction process and
 generalizing the process to use all views available in the scene being
 reconstructed.
 By moving to a multiple-view approach, we will be able to increase the
 accuracy of the DEMs produced while at the same time robustly rejecting
 outliers in the source imagery.
\end_layout

\begin_layout Standard
During the summer of 2011, Dr.
 Taemin Kim
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Intelligent Robotics Group, NASA Ames Research Center, CA, USA
\end_layout

\end_inset

 and I jointly developed a novel multiple-view algorithm.
 It works by approximating very small sections of the planetary surface
 as planar patches and adjusting the height and orientation of the patches
 to minimize the alignment error when the orbital images are projected on
 to them.
 As with any minimization process, local minima and stability are concerns.
 Therefore, to evaluate and debug the objective function, (the alignment
 error funtion being minimized), I have created a small program called 
\begin_inset Quotes eld
\end_inset


\family typewriter
mvpgui
\family default

\begin_inset Quotes erd
\end_inset

 to help visualize its landscape and navigate its parameters.
\end_layout

\begin_layout Standard
Before going into detail about this new multiple view algorithm and presenting
 some results obtained with 
\family typewriter
mvpgui
\family default
, this paper will give some background on cartography to give context for
 the multiple-view algorithm.
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Standard
Before discussing the multiple-view algorithm in this paper, some basic
 concepts in cartography must be introduced.
\end_layout

\begin_layout Subsection
Map Projections
\end_layout

\begin_layout Standard
Topographical maps are typically stored and distributed as DEMs (Digital
 Elevation Maps).
 DEMs are two-dimensional, single-channel digital images of the planetary
 surface.
 Rather than each pixel representing an illumination value, as with typical
 images, in a DEM each pixel represents a height at that location or 
\begin_inset Quotes eld
\end_inset

post
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
In order to store a curved, three-dimensional surface of a planetary body
 as a two-dimensional plane, one must develop some sort of relationship
 between points on the surface and points on the plane.
 In cartography, this is known as a 
\begin_inset Quotes eld
\end_inset

map projection
\begin_inset Quotes erd
\end_inset

: a function that maps locations on a planet's surface to locations on the
 planar map.
\end_layout

\begin_layout Standard
It is a well known fact that it is impossible to project the curved surface
 of a spheroid onto a plane without some kind of distortion.
 Depending on the map projection being used, the perceived distance, direction,
 area or the shape of features on the map may be distorted or preserved.
 For example, the Mollweide projection preserves area but heavily distorts
 shapes, while the Mercator projection preserves small shapes but distorts
 areas [FIG].
\end_layout

\begin_layout Subsubsection
The Equirectangular Projection
\end_layout

\begin_layout Standard
The equirectangular projection (plate carr√©e) is a common representation
 used in digital cartography.
 Although it preserves neither distance, direction, area nor the shape of
 features in the map, it has a computational advantage: The longitude and
 lattitude 
\begin_inset Formula $\boldsymbol{\mathbf{\theta}}=\left(\theta,\varphi\right)$
\end_inset

 of a location
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Typically in cartography, coordinates are represented as (lattitude, longitude)
 rather than (longitude, lattitude).
 However, we choose the latter because it mirrors the representation of
 pixels in an image: (c, r).
\end_layout

\end_inset

 on the map is related to the coordinates 
\begin_inset Formula $\mathbf{z}=\left(c,r\right)$
\end_inset

 of the pixel representing that location by a simple affine relationship:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\boldsymbol{\mathbf{\theta}}\\
1\end{array}\right]=\mathbf{S}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\label{eq:lonlat}\end{equation}

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{S}=\left[\begin{array}{ccc}
s_{c} & 0 & t_{c}\\
0 & -s_{r} & t_{r}\\
0 & 0 & 1\end{array}\right]\label{eq:S}\end{equation}

\end_inset


\begin_inset Formula $s_{u}$
\end_inset

 and 
\begin_inset Formula $s_{v}$
\end_inset

 are the 
\begin_inset Formula $c$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 scale of the map in degrees per pixel, and 
\begin_inset Formula $t_{c}$
\end_inset

 and 
\begin_inset Formula $t_{r}$
\end_inset

 are the longitude and lattitude of the upper-left corner of the map.
 Note that equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lonlat"

\end_inset

 is a homogeneous equation, as described in [REF].
\end_layout

\begin_layout Standard
This projection has the highest amount of distortion when used near the
 poles of the planetary surface.
 In situations where maps of the poles are needed, a different projection
 should be used.
\end_layout

\begin_layout Subsubsection
Moving From Map To Cartesian Coordinates
\end_layout

\begin_layout Standard
It is a simple procedure to calculate cartesian 
\begin_inset Formula $xyz$
\end_inset

 locations on a planetary surface given 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

, a DEM, and its map projection (stored in a datastructure called a 
\begin_inset Quotes eld
\end_inset

georeference
\begin_inset Quotes erd
\end_inset

).
 For a pixel on the DEM 
\begin_inset Formula $\mathbf{z}=\left(c,r\right)$
\end_inset

, the longitude and lattitude 
\begin_inset Formula $\mathbf{\boldsymbol{\mathbf{\theta}}}=\left(\theta,\varphi\right)$
\end_inset

 at that point are calculated using equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lonlat"

\end_inset

.
 Then, let
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\hat{\mathbf{e}}=\left[\begin{array}{c}
\cos\theta\cos\varphi\\
\sin\theta\cos\varphi\\
\sin\varphi\end{array}\right]\label{eq:e}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
be the direction vector in cartesian coordinates pointing from the origin
 longitude and lattitude in question.
 Now, using the radius of the planetary body's surface at this point, 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

, the cartesian coordinate 
\begin_inset Formula $\mathbf{x}=(x,y,z)$
\end_inset

 can be calculated:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{x}=D\left(\mathbf{z}\right)\hat{\mathbf{e}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
When calculating the cartesian coordinates of points in a DEM around a small
 patch of pixels centered around a given pixel 
\begin_inset Formula $\mathbf{z'}$
\end_inset

, the above trigonometric functions can be approximated by their first order
 taylor approximations.
 First, let 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\frac{\partial\mathbf{e}}{\partial\mathbf{x}}=\left[\begin{array}{cc}
-\sin\theta'\cos\varphi' & \cos\theta'\sin\varphi'\\
\cos\theta'\cos\varphi' & -\sin\theta'\sin\varphi'\\
0 & \cos\varphi'\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\mathbf{\boldsymbol{\theta}'}=\left(\theta',\varphi'\right)$
\end_inset

 is the longitude and lattitude for 
\begin_inset Formula $\mathbf{z'}$
\end_inset

 found using equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lonlat"

\end_inset

.
 Then, using the taylor approximation of equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:e"

\end_inset

 centered at 
\begin_inset Formula $\mathbf{\theta'}$
\end_inset

 (equivalently 
\begin_inset Formula $\mathbf{\hat{e}'}$
\end_inset

), we have an affine mapping between 
\begin_inset Formula $\hat{\mathbf{e}}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{\mathbf{\theta}}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\hat{\mathbf{e}}\\
1\end{array}\right]=\mathbf{L}\left[\begin{array}{c}
\mathbf{\theta}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{L}=\left[\begin{array}{cc}
\frac{\partial\mathbf{e}}{\partial\mathbf{x}} & \hat{\mathbf{e}}'-\frac{\partial\mathbf{e}}{\partial\mathbf{x}}\mathbf{\theta'}\\
\mathbf{0} & 1\end{array}\right]\label{eq:L}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Using this result, can now easily map a pixel 
\begin_inset Formula $\mathbf{z}$
\end_inset

 to its cartesian location 
\begin_inset Formula $\mathbf{x}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{x}\\
1\end{array}\right]=D(\mathbf{z})\left[\begin{array}{cc}
\mathbf{I} & \mathbf{0}\\
\mathbf{0} & 1\end{array}\right]\mathbf{L}\mathbf{S}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This relationship very is important performance-wise when using small patches
 of the DEM to create orthoimages (defined in the next section).
 This performance gain is essential for the multiple-view algorithm described
 later in this paper becuse the algorithm generates many orthoimage patches
 at each iteration.
\end_layout

\begin_layout Subsection
Orthoimages
\end_layout

\begin_layout Standard
After a DEM is generated, the source imagery can be projected onto the DEM
 to give it texture.
 This resulting image is called an orthoimage, because it appears as if
 the camera that took the image was orthographic to the planetary body's
 surface (see figure [FIG]).
\end_layout

\begin_layout Standard
To do this, a mapping between the orbital image coordinates 
\begin_inset Formula $\mathbf{u}=\left(u,v\right)$
\end_inset

 and world coordinates 
\begin_inset Formula $\mathbf{x}=\left(x,y,z\right)$
\end_inset

 is needed.
 For a pinhole camera, this mapping is given by its fundimental matrix (see
 [REF]):
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{u}\\
1\end{array}\right]=\mathbf{F}\left[\begin{array}{c}
\mathbf{x}\\
1\end{array}\right]\label{eq:F}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Then, using the approximation from the last section, a orbital image 
\begin_inset Formula $O\left(\mathbf{u}\right)$
\end_inset

 can be mapped onto a small pach centered at 
\begin_inset Formula $\mathbf{z'}$
\end_inset

 on the DEM given by 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

.
 The resulting orthoimage patch 
\begin_inset Formula $I\left(\mathbf{z}\right)$
\end_inset

, is given by:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
I(\mathbf{z})=O\left(\mathbf{F}D(\mathbf{z})\left[\begin{array}{cc}
\mathbf{I} & \mathbf{0}\\
\mathbf{0} & 1\end{array}\right]\mathbf{L}\mathbf{S}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\right)\end{equation}

\end_inset


\end_layout

\begin_layout Section
Multiple-View Photogrammetry
\end_layout

\begin_layout Standard
The multiple-view photogrammetry method jointly developed by Dr.
 Taemin Kim and I is described in this section.
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
Say the terrain of the planetary body is represented as the DEM 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

.
 Projecting all the available orbital imagery on a small patch of this DEM
 yields orthoimages 
\begin_inset Formula $\tilde{I}_{1}\left(\mathbf{z}\right),\tilde{I}_{2}\left(\mathbf{z}\right),\ldots,\tilde{I}_{n}\left(\mathbf{z}\right)$
\end_inset

.
 If the DEM exactly represents the planetary surface, the orthoimages should
 line up exactly (neglecting occlusions, shadows and other artifacts), as
 seen in figure [FIG].
 Error in the DEM will manifest as misalignment in the orthoimage patches.
\end_layout

\begin_layout Standard
If the DEM patches are small, we can approximate the curved planetary surface
 that the patch represents with a plane tangent to the surface at the center
 point of the patch (see figure [FIG]).
 Our algorithm attempts to find this plane for each DEM post by adjusting
 the plane's position and orientation until the alignment error is minimized.
 The plane's height at the DEM post in question becomes the value for that
 DEM post.
 
\end_layout

\begin_layout Subsection
Efficiently Generating Orthoimages
\end_layout

\begin_layout Standard
For a given DEM post 
\begin_inset Formula $\mathbf{z'}$
\end_inset

, we parameterize the plane passing through it in terms of its height 
\begin_inset Formula $h$
\end_inset

 at the DEM post and its normal in spherical coordinates 
\begin_inset Formula $\left(n_{\theta},n_{\varphi}\right)$
\end_inset

.
 With the surface defined with these parameters, it is easy to create the
 orthoimages 
\begin_inset Formula $\tilde{I}_{1}\left(\mathbf{z}\right),\tilde{I}_{2}\left(\mathbf{z}\right),\ldots,\tilde{I}_{n}\left(\mathbf{z}\right)$
\end_inset

 from their the orbital imagery by creating a planar DEM patch and then
 projecting onto it.
 However, with a little manipulation it is possible to find a homography
 between the orbital images and their orthoimages, which is derived here.
\end_layout

\begin_layout Standard
First, to form an equation for the plane, the normal must be converted into
 cartesian coordinates:
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula \begin{equation}
\hat{\mathbf{n}}=\left[\begin{array}{c}
\cos n_{\theta}\cos n_{\varphi}\\
\sin n_{\theta}\cos n_{\varphi}\\
\sin n_{\varphi}\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The equation for a plane using these parameters is:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\hat{\mathbf{n}}^{T}\left(\mathbf{x}-\mathbf{x'}\right)=0\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\mathbf{x'}$
\end_inset

 is the cartesian 
\begin_inset Formula $xyz$
\end_inset

 location of the surface at the DEM post:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{x'}=h\mathbf{\hat{e}'}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
(
\begin_inset Formula $\mathbf{\hat{e}'}$
\end_inset

is found using equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:e"

\end_inset

).
 Solving the plane equation for 
\begin_inset Formula $\mathbf{x}$
\end_inset

 gives:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{x}=\frac{\mathbf{n}^{T}\mathbf{x'}}{\mathbf{n}^{T}\mathbf{e}}\mathbf{\hat{e}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
or, in matrix form:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{x}\\
1\end{array}\right]=\mathbf{P}\left[\begin{array}{c}
\mathbf{\hat{e}}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{P}=\left[\begin{array}{cc}
\mathbf{I} & \mathbf{0}\\
\frac{1}{\mathbf{n}^{T}\mathbf{x'}}\mathbf{n}^{T} & 0\end{array}\right]\label{eq:P}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Using equations 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:S"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:L"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:F"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:P"

\end_inset

, the homography 
\begin_inset Formula $\mathbf{H_{k}}$
\end_inset

 between the orbital image 
\begin_inset Formula $O_{k}\left(\mathbf{u}\right)$
\end_inset

 and its corresponding orthoimage 
\begin_inset Formula $\tilde{I}_{k}\left(\mathbf{z}\right)$
\end_inset

 is found:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{u}\\
1\end{array}\right]=\mathbf{H_{k}}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{H_{k}}=\mathbf{F_{k}}\mathbf{P}\mathbf{L}\mathbf{S}\label{eq:H}\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
The Objective Function
\end_layout

\begin_layout Standard
After 
\begin_inset Formula $\tilde{I}_{1}\left(\mathbf{z}\right),\tilde{I}_{2}\left(\mathbf{z}\right),\ldots,\tilde{I}_{n}\left(\mathbf{z}\right)$
\end_inset

 have all been found using their homographies, they must be normalized to
 remove any illumination changes before any alignment measure can be developed.
 To this end, they are normalized by their mean and standard deviation:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
I_{k}\left(\mathbf{z}\right)=\frac{\tilde{I}_{k}\left(\mathbf{z}\right)-\overline{\tilde{I}_{k}\left(\mathbf{z}\right)}}{\textrm{std}\left(\tilde{I}_{k}\left(\mathbf{z}\right)\right)}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Once the normalized orthoimage patches 
\begin_inset Formula $I_{1}\left(\mathbf{z}\right),I_{2}\left(\mathbf{z}\right),\ldots,I_{n}\left(\mathbf{z}\right)$
\end_inset

 are found, the objective function can be defined as the measure of alignment
 error as a function of plane position and orientation:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
f\left(h,n_{\theta},n_{\varphi}\right)=\sum_{k=1}^{n}\int g_{c}\left(\mathbf{z}\right)\left(A\left(\mathbf{z}\right)-I_{k}\left(\mathbf{z}\right)\right)^{2}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
A\left(\mathbf{z}\right)=\frac{1}{n}\sum_{k=1}^{n}I_{k}\left(\mathbf{z}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
is the estimated normalized albedo for the patch, and 
\begin_inset Formula $g_{c}\left(\mathbf{z}\right)$
\end_inset

 is a gaussian correlation window centered around the DEM point being solved
 for.
\end_layout

\begin_layout Section
Evaluating The Objective Function Using
\family typewriter
 mvpgui
\end_layout

\begin_layout Standard
To evaluate and explore the parameters of the multiple-view objective function,
 I developed the program 
\family typewriter
mvpgui
\family default
.
\end_layout

\begin_layout Subsection
Implementation Details
\end_layout

\begin_layout Subsection
Basic Commands And Usage
\end_layout

\begin_layout Subsection
Results With Synthetic Data
\end_layout

\begin_layout Subsection
Results With Real Data
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
The development of the AMVP will be an exciting next step in the field of
 automated DEM construction processes.
 We expect that the final version will run at least as fast as the ASP,
 but provide better results and be much easier to use.
 Furthermore, with a good software infrastructure, we will be able to use
 it to further other areas of research like the photometric refinement of
 DEMs.
 In the meantime, we will focus on developing and characterizing the core
 multiple-view algorithm while we continue to build and refine the software
 technologies required for its large-scale implementation.
\end_layout

\begin_layout Standard
Kernel size will be an issue
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../amvp"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
