#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{url}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Planetary Multi-Photogrammetry and its Visualization
\end_layout

\begin_layout Author
Kyle D.
 Husmann
\begin_inset Newline newline
\end_inset


\shape italic
\size normal
khusmann@calpoly.edu
\shape default
\size default

\begin_inset Newline newline
\end_inset


\shape italic
\size normal
California Polytechnic State University, San Luis Obispo, CA, USA
\end_layout

\begin_layout Date
March 11, 2011
\end_layout

\begin_layout Abstract
During the summer of 2010, Dr.
 Taemin Kim and Kyle Husmann jointly developed a novel new algorithm to
 generate topographical maps of planetary surfaces using a multiple-view
 photogrammetry approach.
 To evaluate and debug the algorithm, a program called 
\family typewriter
mvpgui
\family default
 was developed to visualize and examine the objective function.
 After verifying the correct operation of the algorithm and 
\family typewriter
mvpgui
\family default
 with synthetic data, it is run with real orbital data from the Apollo 15
 mission.
 The results confirm the validity of the multiple-view algorithm as well
 as demonstrate the value of objective function visualization.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Topographical maps are an essential tool for scientists interested in exploring
 and learning more about planetary bodies like the moon or mars.
 These maps allow scientists do everything from identifying geological phenomena
 to identifying potential landing sites for probes or spacecraft.
\end_layout

\begin_layout Standard
Satellites and other spacecraft that visit planetary bodies of interest
 are usually equipped with a variety of sensors, some of which can be used
 to recover the topography of the planetary surface.
 LiDAR (Light Detection And Ranging) sensors give sparse (but highly accurate)
 measurements at periodic points called 
\begin_inset Quotes eld
\end_inset

posts
\begin_inset Quotes erd
\end_inset

.
 Raw images that are captured as the satellite orbits the planetary body
 can also be processed to create highly detailed topographical maps.
 By registering and aligning these two data sets, maps can be created that
 are both dense and accurate.
 The methods of processing orbital images into topographical maps are the
 topic of this paper.
\end_layout

\begin_layout Standard
Given two images of the same scene taken from slightly different perspectives,
 the relative shift of objects from frame to frame (known as 
\begin_inset Quotes eld
\end_inset

disparity
\begin_inset Quotes erd
\end_inset

) is related to distance of the object: far objects appear to move less
 than close objects.
 This phenomena should be familiar, since the human brain uses this relationship
 to create depth perception from the differences in perspective seen by
 both eyes.
 Similarly, depth information from orbital imagery can be recovered in areas
 where the images overlap by matching points in the images that correspond
 to the same 3D location and measuring their disparity.
 By using the disparity along with the location and orientation of the spacecraf
t as well as a mathematical model for the lens of the camera, the precise
 location of the 3D point can be calculated.
 This technique of using matching points between images to calculate 3D
 locations is known as 
\begin_inset Quotes eld
\end_inset

stereophotogrammetry
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "mvg-hartley"

\end_inset

.
\end_layout

\begin_layout Standard
Before computers automated this task, points in orbital images were manually
 matched using mechanical stereoplotters like the one shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:stereoplotter"

\end_inset

.
 Now, computers can perform this once long and arduous process with minimal
 human interaction.
 Software suites like the Ames Stereo Pipeline 
\begin_inset CommandInset citation
LatexCommand cite
key "asp-broxton2008,asp-website"

\end_inset

 can be fed orbital images and will output the topography of the scene being
 imaged in the form of digital elevation maps (DEMs).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Kelsh_stereoplotter.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
A Kelsh stereoplotter (source: http://en.wikipedia.org/wiki/File:Kelsh.jpg)
\begin_inset CommandInset label
LatexCommand label
name "fig:stereoplotter"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
While stereophotogrammetry produces good results, we are interested in going
 beyond the usual two views used in the stereo reconstruction process and
 generalizing the process to use all views available in the scene being
 reconstructed.
 By moving to a multiple-view approach, we will be able to increase the
 accuracy of the DEMs produced while at the same time robustly rejecting
 outliers in the source imagery.
\end_layout

\begin_layout Standard
During the summer of 2010, Dr.
 Taemin Kim
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Intelligent Robotics Group, NASA Ames Research Center, CA, USA
\end_layout

\end_inset

 and I jointly developed a novel multiple-view algorithm.
 It works by approximating very small sections of the planetary surface
 as planar patches and adjusting the location and orientation of the patches
 to minimize the alignment error when the orbital images are projected on
 to them.
 As with any minimization process, local minima and the general shape of
 the objective function (in this case, the alignment error function being
 minimized) are concerns.
 Therefore, to evaluate and debug the objective function, I have created
 a small program called 
\begin_inset Quotes eld
\end_inset


\family typewriter
mvpgui
\family default

\begin_inset Quotes erd
\end_inset

 to help visualize its landscape and navigate its parameters.
\end_layout

\begin_layout Standard
Before going into detail about this new multiple view algorithm and presenting
 some results obtained with 
\family typewriter
mvpgui
\family default
, this paper will give some background on cartography to give context for
 the multiple-view algorithm.
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Standard
Before discussing the multiple-view algorithm in this paper, some basic
 concepts in cartography must be introduced.
\end_layout

\begin_layout Subsection
Map Projections
\end_layout

\begin_layout Standard
Topographical maps are typically stored and distributed as DEMs (Digital
 Elevation Maps).
 DEMs are two-dimensional, single-channel digital images of the planetary
 surface.
 Rather than each pixel representing an illumination value, as with typical
 images, in a DEM each pixel represents a height at that location or 
\begin_inset Quotes eld
\end_inset

post
\begin_inset Quotes erd
\end_inset

.
 This 
\begin_inset Quotes eld
\end_inset

height
\begin_inset Quotes erd
\end_inset

 is measured as the radius of the planetary body at that specific point.
\end_layout

\begin_layout Standard
In order to store a curved, three-dimensional surface of a planetary body
 as a two-dimensional plane, one must develop some sort of relationship
 between points on the surface and points on the plane.
 In cartography, this is known as a 
\begin_inset Quotes eld
\end_inset

map projection
\begin_inset Quotes erd
\end_inset

: a function that maps locations on a planet's surface to locations on the
 planar map.
\end_layout

\begin_layout Standard
It is a well known fact that it is impossible to project the curved surface
 of a spheroid onto a plane without some kind of distortion 
\begin_inset CommandInset citation
LatexCommand cite
key "usgs-mapproj"

\end_inset

.
 Depending on the map projection being used, the perceived distance, direction,
 area or the shape of features on the map may be distorted or preserved.
 For example, the Mercator projection (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:proj-mercator"

\end_inset

) preserves area but heavily distorts shapes, while the sinusoidal projection
 (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:proj-sin"

\end_inset

) preserves small shapes but distorts areas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Usgs_map_mercator.svg

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
The Mercator projection accurately depicts small shapes but distorts areas.
 (Source: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
url{http://egsc.usgs.gov/isb/pubs/MapProjections/graphics/sinousidal.gif}
\end_layout

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:proj-mercator"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Usgs_map_sinousidal_equal_area.svg
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
The sinusoidal projection accurately depicts relative sizes, but distorts
 shapes and directions.
 (Source: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
url{http://egsc.usgs.gov/isb/pubs/MapProjections/graphics/mercator.gif}
\end_layout

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:proj-sin"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
The Equirectangular Projection
\end_layout

\begin_layout Standard
The equirectangular projection (also known as plate carrée) is a common
 representation used in digital cartography.
 Although it preserves neither distance, direction, area nor the shape of
 features in the map, it has a computational advantage: The longitude and
 latitude 
\begin_inset Formula $\boldsymbol{\mathbf{\theta}}=\left(\theta,\varphi\right)$
\end_inset

 of a location
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Typically in cartography, coordinates are represented as (latitude, longitude)
 rather than (longitude, latitude).
 However, we choose the latter because it mirrors the representation of
 pixels in an image: (c, r).
\end_layout

\end_inset

 on the map is related to the coordinates 
\begin_inset Formula $\mathbf{z}=\left(c,r\right)$
\end_inset

 of the pixel representing that location by a simple affine relationship:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\boldsymbol{\mathbf{\theta}}\\
1\end{array}\right]=\mathbf{S}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\label{eq:lonlat}\end{equation}

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{S}=\left[\begin{array}{ccc}
s_{c} & 0 & t_{c}\\
0 & -s_{r} & t_{r}\\
0 & 0 & 1\end{array}\right]\label{eq:S}\end{equation}

\end_inset


\begin_inset Formula $s_{c}$
\end_inset

 and 
\begin_inset Formula $s_{r}$
\end_inset

 are the 
\begin_inset Formula $c$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

 scale of the map in degrees per pixel, and 
\begin_inset Formula $t_{c}$
\end_inset

 and 
\begin_inset Formula $t_{r}$
\end_inset

 are the longitude and latitude of the upper-left corner of the map.
 Note that equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lonlat"

\end_inset

 is a homogeneous equation 
\begin_inset CommandInset citation
LatexCommand cite
key "mvg-hartley"

\end_inset

.
\end_layout

\begin_layout Standard
This projection has the highest amount of distortion when used near the
 poles of the planetary surface.
 In situations where maps of the poles are needed, a different projection
 should be used.
\end_layout

\begin_layout Subsubsection
Moving From Map To Cartesian Coordinates
\end_layout

\begin_layout Standard
It is a simple procedure to calculate Cartesian 
\begin_inset Formula $xyz$
\end_inset

 locations on a planetary surface given 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

, a DEM, and its map projection (stored in a data structure called a 
\begin_inset Quotes eld
\end_inset

georeference
\begin_inset Quotes erd
\end_inset

).
 For a pixel on the DEM 
\begin_inset Formula $\mathbf{z}=\left(c,r\right)$
\end_inset

, the longitude and latitude 
\begin_inset Formula $\mathbf{\boldsymbol{\mathbf{\theta}}}=\left(\theta,\varphi\right)$
\end_inset

 at that point are calculated using equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lonlat"

\end_inset

.
 Then, let
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\hat{\mathbf{e}}=\left[\begin{array}{c}
\cos\theta\cos\varphi\\
\sin\theta\cos\varphi\\
\sin\varphi\end{array}\right]\label{eq:e}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
be the direction vector in Cartesian coordinates pointing from the origin
 longitude and latitude in question.
 Now, using the radius of the planetary body's surface at this point, 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

, the Cartesian coordinate 
\begin_inset Formula $\mathbf{x}=(x,y,z)$
\end_inset

 can be calculated:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{x}=D\left(\mathbf{z}\right)\hat{\mathbf{e}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
When calculating the Cartesian coordinates of points in a DEM around a small
 patch of pixels centered around a given pixel 
\begin_inset Formula $\mathbf{z'}$
\end_inset

, the above trigonometric functions can be approximated by their first order
 Taylor approximations.
 First, let 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\frac{\partial\mathbf{e}}{\partial\mathbf{x}}=\left[\begin{array}{cc}
-\sin\theta'\cos\varphi' & \cos\theta'\sin\varphi'\\
\cos\theta'\cos\varphi' & -\sin\theta'\sin\varphi'\\
0 & \cos\varphi'\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\mathbf{\boldsymbol{\theta}'}=\left(\theta',\varphi'\right)$
\end_inset

 is the longitude and latitude for 
\begin_inset Formula $\mathbf{z'}$
\end_inset

 found using equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lonlat"

\end_inset

.
 Then, using the Taylor approximation of equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:e"

\end_inset

 centered at 
\begin_inset Formula $\mathbf{\theta'}$
\end_inset

 (or equivalently 
\begin_inset Formula $\mathbf{\hat{e}'}$
\end_inset

), we find an affine mapping between 
\begin_inset Formula $\hat{\mathbf{e}}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{\mathbf{\theta}}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\hat{\mathbf{e}}\\
1\end{array}\right]=\mathbf{L}\left[\begin{array}{c}
\mathbf{\theta}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{L}=\left[\begin{array}{cc}
\frac{\partial\mathbf{e}}{\partial\mathbf{x}} & \hat{\mathbf{e}}'-\frac{\partial\mathbf{e}}{\partial\mathbf{x}}\mathbf{\theta'}\\
\mathbf{0} & 1\end{array}\right]\label{eq:L}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
Using this result, can now easily map a pixel 
\begin_inset Formula $\mathbf{z}$
\end_inset

 to its Cartesian location 
\begin_inset Formula $\mathbf{x}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{x}\\
1\end{array}\right]=D(\mathbf{z})\left[\begin{array}{cc}
\mathbf{I} & \mathbf{0}\\
\mathbf{0} & 1\end{array}\right]\mathbf{L}\mathbf{S}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
This relationship very is important performance-wise when using small patches
 of the DEM to create orthoimages (defined in the next section).
 Since the multiple-view algorithm described later in this paper generates
 many orthoimage patches at each iteration, this performance gain from using
 the Taylor approximation is essential.
\end_layout

\begin_layout Subsection
Orthoimages
\end_layout

\begin_layout Standard
After a DEM is generated, the source imagery can be projected onto the DEM
 to give it texture.
 This resulting image is called an orthoimage, because it appears as if
 the camera that took the image was orthographic to the planetary body's
 surface.
\end_layout

\begin_layout Standard
To do this, a mapping between the orbital image coordinates 
\begin_inset Formula $\mathbf{u}=\left(u,v\right)$
\end_inset

 and world coordinates 
\begin_inset Formula $\mathbf{x}=\left(x,y,z\right)$
\end_inset

 is needed.
 For a pinhole camera, this mapping is given by its fundamental matrix (see
 
\begin_inset CommandInset citation
LatexCommand cite
key "mvg-hartley"

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{u}\\
1\end{array}\right]=\mathbf{F}\left[\begin{array}{c}
\mathbf{x}\\
1\end{array}\right]\label{eq:F}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
Then, using the approximation from the last section, a orbital image 
\begin_inset Formula $O\left(\mathbf{u}\right)$
\end_inset

 can be mapped onto a small patch centered at 
\begin_inset Formula $\mathbf{z'}$
\end_inset

 on the DEM given by 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

.
 The resulting orthoimage patch 
\begin_inset Formula $I\left(\mathbf{z}\right)$
\end_inset

, is given by:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
I(\mathbf{z})=O\left(\mathbf{F}D(\mathbf{z})\left[\begin{array}{cc}
\mathbf{I} & \mathbf{0}\\
\mathbf{0} & 1\end{array}\right]\mathbf{L}\mathbf{S}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\right)\end{equation}

\end_inset


\end_layout

\begin_layout Section
Multiple-View Photogrammetry
\end_layout

\begin_layout Standard
The multiple-view photogrammetry method jointly developed by Dr.
 Taemin Kim and I is described in this section.
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
Say the terrain of the planetary body is represented as the DEM 
\begin_inset Formula $D\left(\mathbf{z}\right)$
\end_inset

.
 Projecting all the available orbital imagery on a small patch of this DEM
 yields orthoimages 
\begin_inset Formula $\tilde{I}_{1}\left(\mathbf{z}\right),\tilde{I}_{2}\left(\mathbf{z}\right),\ldots,\tilde{I}_{n}\left(\mathbf{z}\right)$
\end_inset

.
 If the DEM exactly represents the planetary surface, the orthoimages should
 line up exactly (neglecting occlusions, shadows and other artifacts).
 Error in the DEM will manifest as misalignment in the orthoimage patches.
\end_layout

\begin_layout Standard
If the DEM patches are small, we can approximate the curved planetary surface
 that the patch represents with a plane tangent to the surface at the center
 point of the patch (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tan_plane"

\end_inset

).
 Our algorithm attempts to find this plane for each DEM post by adjusting
 the plane's position and orientation until the alignment error in the orthoproj
ected orbital images is minimized.
 The plane's height at the DEM post in question becomes the value for that
 DEM post.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename tan_plane_image.svg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The planetary surface is approximated by a plane tangent to the surface
 point at the center of the patch.
 The orientation and position of this plane are adjusted until the alignment
 error in the orthoprojected orbital images is minimized.
\begin_inset CommandInset label
LatexCommand label
name "fig:tan_plane"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Efficiently Generating Orthoimages
\end_layout

\begin_layout Standard
For a given DEM post 
\begin_inset Formula $\mathbf{z'}$
\end_inset

, we parameterize the plane passing through it in terms of its height 
\begin_inset Formula $h$
\end_inset

 at the DEM post and its normal in spherical coordinates 
\begin_inset Formula $\left(n_{\theta},n_{\varphi}\right)$
\end_inset

.
 With the surface defined with these parameters, it is easy to create the
 orthoimages 
\begin_inset Formula $\tilde{I}_{1}\left(\mathbf{z}\right),\tilde{I}_{2}\left(\mathbf{z}\right),\ldots,\tilde{I}_{n}\left(\mathbf{z}\right)$
\end_inset

 from their the orbital imagery by creating a planar DEM patch and then
 projecting onto it.
 However, with a little manipulation it is possible to find a homography
 between the orbital images and their orthoimages, which is derived here.
\end_layout

\begin_layout Standard
First, to form an equation for the plane, the normal must be converted into
 Cartesian coordinates:
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula \begin{equation}
\hat{\mathbf{n}}=\left[\begin{array}{c}
\cos n_{\theta}\cos n_{\varphi}\\
\sin n_{\theta}\cos n_{\varphi}\\
\sin n_{\varphi}\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
The equation for a plane using these parameters is:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\hat{\mathbf{n}}^{T}\left(\mathbf{x}-\mathbf{x'}\right)=0\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\mathbf{x'}$
\end_inset

 is the Cartesian 
\begin_inset Formula $xyz$
\end_inset

 location of the surface at the DEM post:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{x'}=h\mathbf{\hat{e}'}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
(
\begin_inset Formula $\mathbf{\hat{e}'}$
\end_inset

is found using equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:e"

\end_inset

).
 Solving the plane equation for 
\begin_inset Formula $\mathbf{x}$
\end_inset

 gives:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{x}=\frac{\mathbf{n}^{T}\mathbf{x'}}{\mathbf{n}^{T}\mathbf{e}}\mathbf{\hat{e}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
or, in matrix form:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{x}\\
1\end{array}\right]=\mathbf{P}\left[\begin{array}{c}
\mathbf{\hat{e}}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{P}=\left[\begin{array}{cc}
\mathbf{I} & \mathbf{0}\\
\frac{1}{\mathbf{n}^{T}\mathbf{x'}}\mathbf{n}^{T} & 0\end{array}\right]\label{eq:P}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
Using equations 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:S"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:L"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:F"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:P"

\end_inset

, the homography 
\begin_inset Formula $\mathbf{H_{k}}$
\end_inset

 between the orbital image 
\begin_inset Formula $O_{k}\left(\mathbf{u}\right)$
\end_inset

 and its corresponding orthoimage 
\begin_inset Formula $\tilde{I}_{k}\left(\mathbf{z}\right)$
\end_inset

 is found:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
\mathbf{u}\\
1\end{array}\right]=\mathbf{H_{k}}\left[\begin{array}{c}
\mathbf{z}\\
1\end{array}\right]\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{H_{k}}=\mathbf{F_{k}}\mathbf{P}\mathbf{L}\mathbf{S}\label{eq:H}\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
The Objective Function
\end_layout

\begin_layout Standard
After 
\begin_inset Formula $\tilde{I}_{1}\left(\mathbf{z}\right),\tilde{I}_{2}\left(\mathbf{z}\right),\ldots,\tilde{I}_{n}\left(\mathbf{z}\right)$
\end_inset

 have all been found using their homographies, they must be normalized to
 remove any illumination changes before any alignment measure can be developed.
 To this end, they are normalized by their mean and standard deviation:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
I_{k}\left(\mathbf{z}\right)=\frac{\tilde{I}_{k}\left(\mathbf{z}\right)-\overline{\tilde{I}_{k}\left(\mathbf{z}\right)}}{\textrm{std}\left(\tilde{I}_{k}\left(\mathbf{z}\right)\right)}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
Once the normalized orthoimage patches 
\begin_inset Formula $I_{1}\left(\mathbf{z}\right),I_{2}\left(\mathbf{z}\right),\ldots,I_{n}\left(\mathbf{z}\right)$
\end_inset

 are found, the objective function can be defined as the measure of alignment
 error as a function of plane position and orientation:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
f\left(h,n_{\theta},n_{\varphi}\right)=\sum_{k=1}^{n}\int g_{c}\left(\mathbf{z}\right)\left(A\left(\mathbf{z}\right)-I_{k}\left(\mathbf{z}\right)\right)^{2}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
A\left(\mathbf{z}\right)=\frac{1}{n}\sum_{k=1}^{n}I_{k}\left(\mathbf{z}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
is the estimated normalized albedo for the patch, and 
\begin_inset Formula $g_{c}\left(\mathbf{z}\right)$
\end_inset

 is a Gaussian correlation window centered around the DEM point being solved
 for.
\end_layout

\begin_layout Section
Evaluating The Objective Function Using
\family typewriter
 mvpgui
\end_layout

\begin_layout Standard
To evaluate and explore the parameters of the multiple-view objective function,
 I developed the program 
\family typewriter
mvpgui
\family default
.
\end_layout

\begin_layout Subsection
Implementation Details
\end_layout

\begin_layout Standard

\family typewriter
mvpgui
\family default
 was written in 
\family typewriter
octave
\family default
, an open source 
\family typewriter
MATLAB
\family default
 clone 
\begin_inset CommandInset citation
LatexCommand cite
key "octave-website"

\end_inset

.
 Since 
\family typewriter
octave
\family default
 does not natively support loading 32-bit images, georeferences, or their
 camera models, the interpreter was extended using oct-files: bridges between
 
\family typewriter
octave
\family default
 and custom C++ code 
\begin_inset CommandInset citation
LatexCommand cite
key "octave-manual"

\end_inset

.
 In the oct-files, loading the images, georeferences and camera models was
 accomplished using the NASA Ames Vision Workbench, an open-source computer
 vision library .
\end_layout

\begin_layout Subsection
Basic Commands And Usage
\end_layout

\begin_layout Standard
mvpgui is invoked by passing it a georeferenced DEM (to use for initial
 post values) followed by orbital images and their camera models:
\end_layout

\begin_layout Standard
\begin_inset Box Framed
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

./mvpgui dem.tif orbit1.tif orbit1.pinhole
\end_layout

\begin_layout Plain Layout

                 orbit2.tif orbit2.pinhole
\end_layout

\begin_layout Plain Layout

                [orbit3.tif orbit3.pinhole...]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
After loading the images, it gives a simple prompt.
 Entering 
\begin_inset Quotes eld
\end_inset

help
\begin_inset Quotes erd
\end_inset

 will give you the list of commands:
\end_layout

\begin_layout Standard
\begin_inset Box Framed
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Loading images...
 Done!
\end_layout

\begin_layout Plain Layout

mvp> help
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Usage: help [command]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Available commands:
\end_layout

\begin_layout Plain Layout

   help
\end_layout

\begin_layout Plain Layout

   poi
\end_layout

\begin_layout Plain Layout

   hwin
\end_layout

\begin_layout Plain Layout

   cp
\end_layout

\begin_layout Plain Layout

   cpi
\end_layout

\begin_layout Plain Layout

   rplot
\end_layout

\begin_layout Plain Layout

   llplot
\end_layout

\begin_layout Plain Layout

   replot
\end_layout

\begin_layout Plain Layout

   save
\end_layout

\begin_layout Plain Layout

   exit
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

mvp>
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
When the program starts, it selects the current 
\begin_inset Quotes eld
\end_inset

point of interest
\begin_inset Quotes erd
\end_inset

 (see 
\begin_inset Quotes eld
\end_inset


\family typewriter
help poi
\family default

\begin_inset Quotes erd
\end_inset

) on the DEM to be the center of the DEM.
 The 
\begin_inset Quotes eld
\end_inset

current plane
\begin_inset Quotes erd
\end_inset

 (see 
\begin_inset Quotes eld
\end_inset


\family typewriter
help cp
\family default

\begin_inset Quotes erd
\end_inset

) is initialized to be tangent to the surface of the DEM at that point.
 Window size defaults to 10, and can be adjusted with 
\begin_inset Quotes eld
\end_inset


\family typewriter
hwin
\family default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Graphs can be generated with the 
\begin_inset Quotes eld
\end_inset


\family typewriter
rplot
\family default

\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\family typewriter
llplot
\family default

\begin_inset Quotes erd
\end_inset

 commands, and can be saved to file using the 
\begin_inset Quotes eld
\end_inset


\family typewriter
save
\family default

\begin_inset Quotes erd
\end_inset

 command.
\end_layout

\begin_layout Subsection
Results With Synthetic Data
\end_layout

\begin_layout Standard
Synthetic data was created to examine the performance of the multiple-view
 algorithm under ideal circumstances (no noise) and to verify the correct
 operation of 
\family typewriter
mvpgui
\family default
.
 The synthetic scene is simply DEM representing a planar surface with a
 uniform noise texture, as seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:synthdem"

\end_inset

.
 Notice how the planar geometry appears curved due to the equirectangular
 projection.
 Four 
\begin_inset Quotes eld
\end_inset

orbital images
\begin_inset Quotes erd
\end_inset

 were 
\begin_inset Quotes eld
\end_inset

taken
\begin_inset Quotes erd
\end_inset

 of the scene and are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:synthorbits"

\end_inset

.
 The camera models and locations as well as the location of the surface
 were chosen to be the same as the real orbital data used in the next section.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename synthDEM.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Synthetic DEM
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename synthDRG.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Synthetic Orthoimage
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Synthetic planar DEM and orthoimage
\begin_inset CommandInset label
LatexCommand label
name "fig:synthdem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename synthorbit0.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Image 1
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
5
\begin_inset Graphics
	filename synthorbit1.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Image 2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename synthorbit2.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Image 3
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename synthorbit3.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Image 4
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Orbital images
\begin_inset Quotes erd
\end_inset

 that were 
\begin_inset Quotes eld
\end_inset

taken
\begin_inset Quotes erd
\end_inset

 of the synthetic scene
\begin_inset CommandInset label
LatexCommand label
name "fig:synthorbits"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:synthrplot"

\end_inset

 of the objective function was created using the 
\begin_inset Quotes eld
\end_inset


\family typewriter
rplot
\family default

\begin_inset Quotes erd
\end_inset

 command.
 It shows the objective function as a function of DEM post radius while
 keeping the orientation constant.
 It has a well defined minimum at exactly the height of the post.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename synthrplot.svg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The objective function landscape as a function of radius with orientation
 held constant as created by the 
\begin_inset Quotes eld
\end_inset


\family typewriter
rplot
\family default

\begin_inset Quotes erd
\end_inset

 command with a synthetic scene.
\begin_inset CommandInset label
LatexCommand label
name "fig:synthrplot"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:synthllplot"

\end_inset

 of the objective function was created using the 
\begin_inset Quotes eld
\end_inset


\family typewriter
llplot
\family default

\begin_inset Quotes erd
\end_inset

 command.
 It shows the objective function as a function of plane orientation.
 It also has a well defined minimum at the expected orientation.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename synthllplot.svg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The objective function landscape as a function of orientation with radius
 held constant as created by the 
\begin_inset Quotes eld
\end_inset


\family typewriter
llplot
\family default

\begin_inset Quotes erd
\end_inset

 command with a synthetic scene.
 The darker the data point, the lower the cost.
\begin_inset CommandInset label
LatexCommand label
name "fig:synthllplot"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Both plots of the objective function show that it behaves quadratically
 as expected, and doesn't suffer from local minima.
 This good behavior can be attributed to the synthetic data being free of
 noise, as well as the surface being planar.
 The results here verify that the objective function and 
\family typewriter
mvpgui
\family default
 are indeed working correctly.
\end_layout

\begin_layout Subsection
Results With Real Data
\end_layout

\begin_layout Standard
Orbital data from the Apollo 15 mission was also used to examine the performance
 of the multiple-view algorithm under real conditions.
 Crops of frames AS15-M-1090 through AS15-M-1093 were used, shown in figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:realorbs"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename orbit0.png
	lyxscale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
AS15-M-1090
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename orbit1.png
	lyxscale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
AS15-M-1090
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename orbit2.png
	lyxscale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
AS15-M-1092
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename orbit3.png
	lyxscale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
AS15-M-1093
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Orbital imagery from the Apollo 15 mission
\begin_inset CommandInset label
LatexCommand label
name "fig:realorbs"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:realrplot"

\end_inset

 shows the objective function as a function of DEM post radius, while figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:realllplot"

\end_inset

 varies the plane orientation.
 Both minima are well defined, so it is safe to assume that they reflect
 the position and orientation of the actual lunar surface at that post.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename realrplot.svg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The objective function landscape as a function of radius with orientation
 held constant as created by the 
\begin_inset Quotes eld
\end_inset


\family typewriter
rplot
\family default

\begin_inset Quotes erd
\end_inset

 command with orbital imagery from Apollo 15.
\begin_inset CommandInset label
LatexCommand label
name "fig:realrplot"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename realllplot.svg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The objective function landscape as a function of orientation with radius
 held constant, created by the 
\begin_inset Quotes eld
\end_inset


\family typewriter
llplot
\family default

\begin_inset Quotes erd
\end_inset

 command with orbital imagery from Apollo 15.
 The darker the data point, the lower the cost.
\begin_inset CommandInset label
LatexCommand label
name "fig:realllplot"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The previous results were obtained using a Gaussian window with a standard
 deviation of 8 pixels.
 It is useful to see how the objective function begins to become noisy when
 a smaller window size is used.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:realrplotsmwin"

\end_inset

 shows the objective function as a function of DEM post radius using a Gaussian
 window with a standard deviation of 4.
 Notice how the objective function begins to develop a local minimum, which
 will create problems for the optimizer.
 Clearly, window size will be an important parameter for this algorithm.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename realrplotsmwin.svg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The objective function landscape as created by the 
\begin_inset Quotes eld
\end_inset


\family typewriter
rplot
\family default

\begin_inset Quotes erd
\end_inset

 command with orbital imagery from Apollo 15, with a Gaussian window of
 standard deviation 4.
 Notice how the objective function begins to develop a local minimum when
 the smaller window size is used.
 Local minima will cause an optimizer to converge incorrectly before the
 global solution is found.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:realrplotsmwin"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Through the use of the 
\family typewriter
mvpgui
\family default
 program, it is apparent the cost function for the new multiple-view photogramme
try algorithm satisfies the needs of the algorithm: it does not suffer from
 local minima if a sufficiently large sized window is chosen.
\end_layout

\begin_layout Standard
As the multiple-view photogrammetry algorithm is continued to be developed,
 
\family typewriter
mvpgui
\family default
 should be maintained in parallel as a debugging and visualization tool
 for the algorithm.
 It's visualization capabilities will be invaluable as the complexity of
 the algorithm increases.
\end_layout

\begin_layout Standard
The next step in the development of the multiple-view photogrammetry algorithm
 will be to implement an optimization algorithm to find the minimum of the
 objective function automatically.
 
\family typewriter
mvpgui
\family default
 will be invaluable for debugging because it will allow us to visualize
 the objective function at every iteration.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../amvp"
options "/home/khusmann/projects/MultipleViewPipeline/papers/plainurl"

\end_inset


\end_layout

\end_body
\end_document
